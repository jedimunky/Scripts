-- Step 1. Create tables

CREATE TABLE BWDBU.XXX_SMS_GW_API_KEYS(
  SOURCE_SYSTEM VARCHAR(50) NOT NULL,
  API_KEY VARCHAR(100) NOT NULL,
  ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH      1 INCREMENT BY 1 NO CYCLE CACHE 20 MINVALUE 1 NO MAXVALUE),
  IS_DEFAULT VARCHAR(1) NOT NULL WITH DEFAULT 'N',
  COST_CENTRE VARCHAR(25),
  API_LIMIT INTEGER NOT NULL WITH DEFAULT 2,
  IS_EXTERNAL_API VARCHAR(1) NOT NULL WITH DEFAULT 'N')
IN BWDBU
ORGANIZE BY ROW;

ALTER TABLE BWDBU.XXX_SMS_GW_API_KEYS
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

CREATE TABLE BWDBU.XXX_SMS_GW_USAGE_LOG(
  CREATION_DATE TIMESTAMP NOT NULL,
  INPUT_LIST_COUNT INTEGER NOT NULL,
  MESSAGE_ID VARCHAR(150) NOT NULL,
  SEND_AT VARCHAR(200) NOT NULL,
  RECIPIENT_COUNT INTEGER NOT NULL,
  COST DOUBLE NOT NULL,
  FAILURES_COUNT DOUBLE NOT NULL,
  ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH        1 INCREMENT BY 1 NO CYCLE CACHE 20 MINVALUE 1 NO MAXVALUE),
  API_KEY_ID INTEGER, -- SET TO NOT NULL AFTER FK COMPLETED
  STATUS VARCHAR(25),
  RESPONSE_DATETIME TIMESTAMP,
  MESSAGE VARCHAR(320),
  IS_OPT_OUT VARCHAR(1),
  LINK_HITS INTEGER,
  UPDATE_DATETIME TIMESTAMP,
  LONG_CODE VARCHAR(20),
  CORRESPONDENCE_ID VARCHAR(50))
IN BWDBU
ORGANIZE BY ROW;

ALTER TABLE BWDBU.XXX_SMS_GW_USAGE_LOG
  DATA CAPTURE NONE
  PCTFREE 0
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

COMMIT;

-- Step 2. Populate

INSERT INTO BWDBU.XXX_SMS_GW_API_KEYS(SOURCE_SYSTEM, API_KEY)
  SELECT * FROM BWDBU.SMS_GW_API_KEYS;

INSERT INTO BWDBU.XXX_SMS_GW_USAGE_LOG(CREATION_DATE, INPUT_LIST_COUNT, MESSAGE_ID, SEND_AT, RECIPIENT_COUNT, COST, FAILURES_COUNT)
  SELECT CREATION_DATE, INPUT_LIST_COUNT, MESSAGE_ID, SEND_AT, RECIPIENT_COUNT, COST, FAILURES_COUNT FROM BWDBU.SMS_GW_USAGE_LOG;

UPDATE BWDBU.XXX_SMS_GW_USAGE_LOG
SET    API_KEY_ID = 1;

COMMIT;

-- Step 3. Restore constraints and indexes

REORG TABLE BWDBU.XXX_SMS_GW_API_KEYS;

REORG TABLE BWDBU.XXX_SMS_GW_USAGE_LOG;

ALTER TABLE BWDBU.XXX_SMS_GW_API_KEYS
  ADD CONSTRAINT ID_PK PRIMARY KEY(ID) ENFORCED;

ALTER TABLE BWDBU.XXX_SMS_GW_USAGE_LOG
  ALTER COLUMN API_KEY_ID SET NOT NULL;

ALTER TABLE BWDBU.XXX_SMS_GW_USAGE_LOG
  ADD CONSTRAINT SGUL_PK PRIMARY KEY(ID, API_KEY_ID) ENFORCED;

COMMIT;

-- Step 4. Grants

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE BWDBU.XXX_SMS_GW_API_KEYS TO USER BWDBU;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE BWDBU.XXX_SMS_GW_API_KEYS TO USER CMNDBU;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE BWDBU.XXX_SMS_GW_API_KEYS TO GROUP TIBCO_DB_ACCESS_INTG_C;

GRANT SELECT ON TABLE BWDBU.XXX_SMS_GW_API_KEYS TO GROUP TIBCO_DB_ACCESS_INTG_R;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE BWDBU.XXX_SMS_GW_USAGE_LOG TO USER BWDBU;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE BWDBU.XXX_SMS_GW_USAGE_LOG TO USER CMNDBU;

GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE BWDBU.XXX_SMS_GW_USAGE_LOG TO GROUP TIBCO_DB_ACCESS_INTG_C;

GRANT SELECT ON TABLE BWDBU.XXX_SMS_GW_USAGE_LOG TO GROUP TIBCO_DB_ACCESS_INTG_R;

COMMIT;

-- Step 5. Renames

RENAME TABLE BWDBU.SMS_GW_API_KEYS TO XXX_SMS_GW_API_KEYS_OLD;
RENAME TABLE BWDBU.SMS_GW_USAGE_LOG TO XXX_SMS_GW_USAGE_LOG_OLD;

COMMIT;

RENAME TABLE BWDBU.XXX_SMS_GW_API_KEYS TO SMS_GW_API_KEYS;
RENAME TABLE BWDBU.XXX_SMS_GW_USAGE_LOG TO SMS_GW_USAGE_LOG;

COMMIT;

-- Step 6. Foreign key

ALTER TABLE BWDBU.SMS_GW_USAGE_LOG
  ADD CONSTRAINT SGUL_SGAK_FK FOREIGN KEY(API_KEY_ID) REFERENCES BWDBU.SMS_GW_API_KEYS (ID) ON DELETE RESTRICT ENFORCED;

COMMIT;

-- Step 7. Utilities

REORG TABLE "BWDBU"."SMS_GW_API_KEYS";

REORG TABLE "BWDBU"."SMS_GW_USAGE_LOG";

RUNSTATS ON TABLE BWDBU.SMS_GW_API_KEYS
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE BWDBU.SMS_GW_USAGE_LOG
	ALLOW WRITE ACCESS;
  
-- Step 8. Drop old tables

-- DROP TABLE "BWDBU"."XXX_SMS_GW_API_KEYS_OLD";
-- DROP TABLE "BWDBU"."XXX_SMS_GW_USAGE_LOG_OLD";

-- To be run after testing confirms success.
