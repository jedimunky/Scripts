-- Step 1. Sync

CREATE TABLE EDL.D_HI_ASSESS_GROUP
(
   D_HI_ASSESS_GRP_SK                INTEGER NOT NULL,
   HI_ASSESS_GRP_CDE                 VARCHAR (20) NOT NULL,
   HI_ASSESS_GRP_DESC                VARCHAR (50) NOT NULL,
   ASSESS_GRP_KEY_HI_ITEM_CDE        VARCHAR (20) NOT NULL,
   ASSESS_GRP_KEY_HI_ITEM_TYP_CDE    VARCHAR (20) NOT NULL,
   EFF_DT                            DATE NOT NULL,
   END_DT                            DATE NOT NULL,
   INSERT_BATCH_AUDIT_SK             INTEGER NOT NULL,
   UPDATE_BATCH_AUDIT_SK             INTEGER NOT NULL,
   INSERT_TS                         TIMESTAMP NOT NULL,
   UPDATE_TS                         TIMESTAMP NOT NULL
)
IN TBS_BASEC_EDL_16K
INDEX IN TBS_IDXC_EDL_16K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE EDL.D_HI_ASSESS_GROUP
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE TABLE DD.DD_XREF_HI_ITEM_PRODUCT
(
   D_HI_ITEM_SK                 INTEGER NOT NULL,
   HI_ITEM_CDE                  VARCHAR (20) NOT NULL,
   HI_ITEM_TYP_CDE              VARCHAR (20) NOT NULL,
   D_PROD_COMP_SK               INTEGER NOT NULL,
   PROD_ID                      VARCHAR (20) NOT NULL,
   PROD_COMP_TYP                VARCHAR (20) NOT NULL,
   CONFIGURATION_DT             DATE NOT NULL,
   EFF_DT                       DATE NOT NULL,
   D_HI_ASSESS_GRP_SK           INTEGER NOT NULL,
   HI_ASSESS_GRP_CDE            VARCHAR (20) NOT NULL,
   HI_ASSESS_GRP_USED_FLG       CHARACTER (1 OCTETS) NOT NULL,
   PRE_EXISTING_PERIOD          SMALLINT NOT NULL,
   SERVICE_CDE                  VARCHAR (20) NOT NULL,
   WAIT_PERIOD                  SMALLINT NOT NULL,
   SUPPLEMENTARY_WAIT_PERIOD    SMALLINT NOT NULL,
   RESTRICTED_FLG               VARCHAR (20) NOT NULL,
   EXCLUDED_FLG                 CHARACTER (1 OCTETS) NOT NULL,
   INSERT_BATCH_AUDIT_SK        INTEGER NOT NULL,
   INSERT_TS                    TIMESTAMP NOT NULL
)
IN TBS_BASEC_DD_16K
INDEX IN TBS_IDXC_DD_16K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE DD.DD_XREF_HI_ITEM_PRODUCT
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE TABLE BDL."Online Eligibility Checks Messages"
(
   "OEC Msg Type"         VARCHAR (20) NOT NULL,
   "OEC Msg Type Desc"    VARCHAR (256) NOT NULL,
   "OEC Msg No"           INTEGER NOT NULL,
   "OEC Msg"              VARCHAR (1024) NOT NULL,
   "Assess Group"         VARCHAR (20) NOT NULL,
   "Assess Group Desc"    VARCHAR (256) NOT NULL,
   "Product"              VARCHAR (20) NOT NULL,
   "Product Desc"         VARCHAR (50) NOT NULL,
   "Item Type"            VARCHAR (20) NOT NULL,
   "Item Code"            VARCHAR (20) NOT NULL,
   "Item Short Desc"      VARCHAR (50) NOT NULL,
   "Provider Status"      VARCHAR (50) NOT NULL,
   "OEC Msg Date On"      DATE NOT NULL
)
IN TBS_BASEC_AUSP_16K
ORGANIZE BY ROW;

ALTER TABLE BDL."Online Eligibility Checks Messages"
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE OR REPLACE ALIAS BDL_ALIAS."OEC Messages"
   FOR BDL."Online Eligibility Checks Messages";

CREATE TABLE BDL."Online Eligibility Checks Product Descriptions"
(
   "Product"             VARCHAR (20) NOT NULL,
   "Product Desc"        VARCHAR (50) NOT NULL,
   "OEC Product Desc"    VARCHAR (1024) NOT NULL,
   "Date On" DATE
)
IN TBS_BASEC_AUSP_16K
ORGANIZE BY ROW;

ALTER TABLE BDL."Online Eligibility Checks Product Descriptions"
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE OR REPLACE ALIAS BDL_ALIAS."OEC Product Descriptions"
   FOR BDL."Online Eligibility Checks Product Descriptions";

CREATE TABLE BDL."MBS Product Item Coverage"
(
   "Assess Group"                VARCHAR (20) NOT NULL,
   "Assess Group Desc"           VARCHAR (50) NOT NULL,
   "Item Type"                   VARCHAR (20) NOT NULL,
   "Item Code"                   VARCHAR (20) NOT NULL,
   "Item Desc" VARCHAR (256),
   "Product"                     VARCHAR (20) NOT NULL,
   "Product Desc"                VARCHAR (50) NOT NULL,
   "Covered Ind"                 VARCHAR (50) NOT NULL,
   "Wait Period"                 INTEGER NOT NULL,
   "Pre Exist Period"            INTEGER NOT NULL,
   "Key Iem Flag"                CHARACTER (1 OCTETS) NOT NULL,
   "Item Start Date" DATE,
   "Item Coverage Start Date"    DATE NOT NULL
)
IN TBS_BASEC_AUSP_16K
ORGANIZE BY ROW;

ALTER TABLE BDL."MBS Product Item Coverage"
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE OR REPLACE ALIAS BDL_ALIAS."MBS Product Item Coverage"
   FOR BDL."MBS Product Item Coverage";

CREATE TABLE BDL."Health Insurance Product Rankings"
(
   "Assess Group"         VARCHAR (20) NOT NULL,
   "Assess Group Desc"    VARCHAR (50) NOT NULL,
   "Product Type"         VARCHAR (20) NOT NULL,
   "Product"              VARCHAR (20) NOT NULL,
   "Product Desc"         VARCHAR (50) NOT NULL,
   "Ranking"              DECIMAL (4, 2) NOT NULL,
   "Ranking Type"         VARCHAR (20) NOT NULL,
   "Ranking Type Desc"    VARCHAR (256) NOT NULL,
   "Ranking Date On"      DATE NOT NULL
)
IN TBS_BASEC_BDL_32K
INDEX IN TBS_IDXC_BDL_32K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE BDL."Health Insurance Product Rankings"
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE OR REPLACE ALIAS BDL_ALIAS."HI Product Rankings"
   FOR BDL."Health Insurance Product Rankings";

CREATE TABLE EDL.D_OEC_MESSAGE
(
   D_OEC_MSG_SK               INTEGER NOT NULL,
   OEC_MSG_NUM                INTEGER NOT NULL,
   OEC_MSG_TYP                VARCHAR (20) NOT NULL,
   OEC_MSG_TYP_DESC           VARCHAR (256) NOT NULL,
   HI_ASSESS_GRP_CDE          VARCHAR (20) NOT NULL,
   HI_ITEM_CDE                VARCHAR (20) NOT NULL,
   HI_ITEM_TYP_CDE            VARCHAR (20) NOT NULL,
   PROD_ID                    VARCHAR (20) NOT NULL,
   PROD_COMP_TYP              VARCHAR (20) NOT NULL,
   HI_PROVIDER_STATUS_CDE     VARCHAR (20) NOT NULL,
   HI_PROVIDER_STATUS_DESC    VARCHAR (50) NOT NULL,
   EFF_DT                     DATE NOT NULL,
   END_DT                     DATE NOT NULL,
   MSG_TXT                    VARCHAR (1024) NOT NULL,
   INSERT_BATCH_AUDIT_SK      INTEGER NOT NULL,
   INSERT_TS                  TIMESTAMP NOT NULL,
   UPDATE_TS                  TIMESTAMP NOT NULL
)
IN TBS_BASEC_EDL_16K
INDEX IN TBS_IDXC_EDL_16K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE EDL.D_OEC_MESSAGE
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE TABLE DD.DD_D_HI_ASSESS_GROUP
(
   D_HI_ASSESS_GRP_SK                INTEGER NOT NULL,
   HI_ASSESS_GRP_CDE                 VARCHAR (20) NOT NULL,
   HI_ASSESS_GRP_DESC                VARCHAR (50) NOT NULL,
   ASSESS_GRP_KEY_HI_ITEM_CDE        VARCHAR (20) NOT NULL,
   ASSESS_GRP_KEY_HI_ITEM_TYP_CDE    VARCHAR (20) NOT NULL,
   EFF_DT                            DATE NOT NULL,
   END_DT                            DATE NOT NULL,
   INSERT_BATCH_AUDIT_SK             INTEGER NOT NULL,
   UPDATE_BATCH_AUDIT_SK             INTEGER NOT NULL,
   INSERT_TS                         TIMESTAMP NOT NULL,
   UPDATE_TS                         TIMESTAMP NOT NULL
)
IN TBS_BASEC_DD_16K
INDEX IN TBS_IDXC_DD_16K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE DD.DD_D_HI_ASSESS_GROUP
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE TABLE DD.DD_OEC_MESSAGE
(
   D_OEC_MSG_SK               INTEGER NOT NULL,
   OEC_MSG_NUM                INTEGER NOT NULL,
   OEC_MSG_TYP                VARCHAR (20) NOT NULL,
   OEC_MSG_TYP_DESC           VARCHAR (256) NOT NULL,
   D_HI_ASSESS_GRP_SK         INTEGER NOT NULL,
   HI_ASSESS_GRP_CDE          VARCHAR (20) NOT NULL,
   D_HI_ITEM_SK               INTEGER NOT NULL,
   HI_ITEM_CDE                VARCHAR (20) NOT NULL,
   HI_ITEM_TYP_CDE            VARCHAR (20) NOT NULL,
   D_PROD_COMP_SK             INTEGER NOT NULL,
   PROD_ID                    VARCHAR (20) NOT NULL,
   PROD_COMP_TYP              VARCHAR (20) NOT NULL,
   HI_PROVIDER_STATUS_CDE     VARCHAR (20) NOT NULL,
   HI_PROVIDER_STATUS_DESC    VARCHAR (50) NOT NULL,
   EFF_DT                     DATE NOT NULL,
   END_DT                     DATE NOT NULL,
   MSG_TXT                    VARCHAR (1024) NOT NULL,
   INSERT_BATCH_AUDIT_SK      INTEGER NOT NULL,
   INSERT_TS                  TIMESTAMP NOT NULL
)
IN TBS_BASEC_DD_16K
INDEX IN TBS_IDXC_DD_16K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE DD.DD_OEC_MESSAGE
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE TABLE EDL.D_HI_PROVIDER_RGSTRTN_STATUS
(
   D_HI_PROVIDER_RGSTRTN_STATUS_SK    INTEGER NOT NULL,
   HI_PROVIDER_RGSTRTN_STATUS_CDE     VARCHAR (20) NOT NULL,
   HI_PROVIDER_RGSTRTN_STATUS_DESC    VARCHAR (50) NOT NULL,
   INSERT_BATCH_AUDIT_SK              INTEGER NOT NULL,
   INSERT_TS                          TIMESTAMP NOT NULL
)
IN TBS_BASEC_EDL_16K
INDEX IN TBS_IDXC_EDL_16K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE EDL.D_HI_PROVIDER_RGSTRTN_STATUS
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE TABLE EDL.D_HI_ITEM_PRODUCT_XREF
(
   HI_ITEM_CDE                     VARCHAR (20) NOT NULL,
   HI_ITEM_TYP_CDE                 VARCHAR (20) NOT NULL,
   PROD_ID                         VARCHAR (20) NOT NULL,
   PROD_COMP_TYP                   VARCHAR (20) NOT NULL,
   EFF_DT                          DATE NOT NULL,
   END_DT                          DATE NOT NULL,
   OVERRIDING_HI_ASSESS_GRP_CDE    VARCHAR (20) NOT NULL,
   HI_ASSESS_GRP_USED_FLG          CHARACTER (1 OCTETS) NOT NULL,
   RESTRICTED_FLG                  CHARACTER (1 OCTETS) NOT NULL,
   PRE_EXISTING_PERIOD             SMALLINT NOT NULL,
   SERVICE_CDE                     VARCHAR (20) NOT NULL,
   WAIT_PERIOD                     SMALLINT NOT NULL,
   SUPPLEMENTARY_WAIT_PERIOD       SMALLINT NOT NULL,
   INSERT_BATCH_AUDIT_SK           INTEGER NOT NULL,
   UPDATE_BATCH_AUDIT_SK           INTEGER NOT NULL,
   INSERT_TS                       TIMESTAMP NOT NULL,
   UPDATE_TS                       TIMESTAMP NOT NULL
)
IN TBS_BASEC_EDL_16K
INDEX IN TBS_IDXC_EDL_16K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE EDL.D_HI_ITEM_PRODUCT_XREF
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE TABLE EDL.D_HI_ASSESS_GROUP_PRODUCT_XREF
(
   PROD_ID                  VARCHAR (20) NOT NULL,
   PROD_COMP_TYP            VARCHAR (20) NOT NULL,
   HI_ASSESS_GRP_CDE        VARCHAR (20) NOT NULL,
   RANKING_NUM              DECIMAL (4, 2) NOT NULL,
   RANKING_TYP              VARCHAR (20) NOT NULL,
   RANKING_TYP_DESC         VARCHAR (256) NOT NULL,
   EFF_DT                   DATE NOT NULL,
   END_DT                   DATE NOT NULL,
   INSERT_BATCH_AUDIT_SK    INTEGER NOT NULL,
   UPDATE_BATCH_AUDIT_SK    INTEGER NOT NULL,
   INSERT_TS                TIMESTAMP NOT NULL,
   UPDATE_TS                TIMESTAMP NOT NULL
)
IN TBS_BASEC_EDL_16K
INDEX IN TBS_IDXC_EDL_16K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE EDL.D_HI_ASSESS_GROUP_PRODUCT_XREF
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

CREATE TABLE DD.DD_XREF_HI_ASSESS_GROUP_PRODUCT
(
   D_PROD_COMP_SK           INTEGER NOT NULL,
   PROD_ID                  VARCHAR (20) NOT NULL,
   PROD_COMP_TYP            VARCHAR (20) NOT NULL,
   CONFIGURATION_DT         DATE NOT NULL,
   EFF_DT                   DATE NOT NULL,
   D_HI_ASSESS_GRP_SK       INTEGER NOT NULL,
   HI_ASSESS_GRP_CDE        VARCHAR (20) NOT NULL,
   RANKING_NUM              DECIMAL (4, 2) NOT NULL,
   RANKING_TYP              VARCHAR (20) NOT NULL,
   RANKING_TYP_DESC         VARCHAR (256) NOT NULL,
   INSERT_BATCH_AUDIT_SK    INTEGER NOT NULL,
   INSERT_TS                TIMESTAMP NOT NULL
)
IN TBS_BASEC_DD_16K
INDEX IN TBS_IDXC_DD_16K
COMPRESS YES ADAPTIVE
VALUE COMPRESSION
ORGANIZE BY ROW;

ALTER TABLE DD.DD_XREF_HI_ASSESS_GROUP_PRODUCT
   DATA CAPTURE NONE
   PCTFREE 0
   LOCKSIZE ROW
   APPEND OFF
   NOT VOLATILE;

-- Step 2. Restoring constraints and indexes

CREATE UNIQUE INDEX DD.XAK1DD_OEC_MESSAGE
   ON DD.DD_OEC_MESSAGE (OEC_MSG_NUM ASC)
   ALLOW REVERSE SCANS
      COMPRESS YES
      INCLUDE NULL KEYS;

CREATE UNIQUE INDEX DD.XAK1DD_D_HI_ASSESS_GROUP
   ON DD.DD_D_HI_ASSESS_GROUP (HI_ASSESS_GRP_CDE ASC, EFF_DT ASC)
   ALLOW REVERSE SCANS
      COMPRESS YES
      INCLUDE NULL KEYS;

CREATE UNIQUE INDEX EDL.XAK1D_HI_ASSESS_GROUP
   ON EDL.D_HI_ASSESS_GROUP (HI_ASSESS_GRP_CDE ASC, EFF_DT ASC)
   ALLOW REVERSE SCANS
      COMPRESS YES
      INCLUDE NULL KEYS;

CREATE UNIQUE INDEX EDL.XAK1D_OEC_MESSAGE
   ON EDL.D_OEC_MESSAGE (OEC_MSG_NUM ASC)
   ALLOW REVERSE SCANS
      COMPRESS YES
      INCLUDE NULL KEYS;

CREATE UNIQUE INDEX EDL.XAK1D_HI_PROVIDER_RGSTRTN_STATUS
   ON EDL.D_HI_PROVIDER_RGSTRTN_STATUS (HI_PROVIDER_RGSTRTN_STATUS_CDE ASC)
   ALLOW REVERSE SCANS
      COMPRESS YES
      INCLUDE NULL KEYS;

ALTER TABLE BDL."Health Insurance Product Rankings"
   ADD CONSTRAINT "PK_Health Insurance Product Rankings" PRIMARY KEY
          ("Product", "Assess Group")
          ENFORCED;

ALTER TABLE BDL."MBS Product Item Coverage"
   ADD CONSTRAINT "PK_MBS Product Item Coverage" PRIMARY KEY
          ("Item Type",
           "Item Code",
           "Product",
           "Item Coverage Start Date")
          ENFORCED;

ALTER TABLE BDL."Online Eligibility Checks Messages"
   ADD CONSTRAINT "XPK_OEC Messages" PRIMARY KEY ("OEC Msg No") ENFORCED;

ALTER TABLE BDL."Online Eligibility Checks Product Descriptions"
   ADD CONSTRAINT "XPK OEC Product Descriptions" PRIMARY KEY ("Product")
       ENFORCED;

ALTER TABLE DD.DD_D_HI_ASSESS_GROUP
   ADD CONSTRAINT XPKDD_D_HI_ASSESS_GROUP PRIMARY KEY (D_HI_ASSESS_GRP_SK)
       ENFORCED;

ALTER TABLE DD.DD_OEC_MESSAGE
   ADD CONSTRAINT XPKDD_OEC_MESSAGE PRIMARY KEY (D_OEC_MSG_SK) ENFORCED;

ALTER TABLE DD.DD_XREF_HI_ASSESS_GROUP_PRODUCT
   ADD CONSTRAINT XPKDD_XREF_HI_ASSESS_GROUP_PRODUCT PRIMARY KEY
          (D_PROD_COMP_SK, CONFIGURATION_DT, D_HI_ASSESS_GRP_SK)
          ENFORCED;

ALTER TABLE EDL.D_HI_ASSESS_GROUP
   ADD CONSTRAINT XPKD_HI_ASSESS_GROUP PRIMARY KEY (D_HI_ASSESS_GRP_SK)
       ENFORCED;

ALTER TABLE EDL.D_HI_ASSESS_GROUP_PRODUCT_XREF
   ADD CONSTRAINT XPKD_HI_ASSESS_GROUP_PRODUCT_XREF PRIMARY KEY
          (PROD_ID, EFF_DT, HI_ASSESS_GRP_CDE)
          ENFORCED;

ALTER TABLE EDL.D_HI_ITEM_PRODUCT_XREF
   ADD CONSTRAINT XPKD_HI_ITEM_PRODUCT_XREF PRIMARY KEY
          (HI_ITEM_CDE,
           HI_ITEM_TYP_CDE,
           PROD_ID,
           EFF_DT)
          ENFORCED;

ALTER TABLE EDL.D_HI_PROVIDER_RGSTRTN_STATUS
   ADD CONSTRAINT XPKD_HI_PROVIDER_RGSTRTN_STATUS PRIMARY KEY
          (D_HI_PROVIDER_RGSTRTN_STATUS_SK)
          ENFORCED;

ALTER TABLE EDL.D_OEC_MESSAGE
   ADD CONSTRAINT XPKD_OEC_MESSAGE PRIMARY KEY (D_OEC_MSG_SK) ENFORCED;

COMMIT;

-- Step 3. Runstats
RUNSTATS ON TABLE BDL."Health Insurance Product Rankings"
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE BDL."MBS Product Item Coverage"
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE BDL."Online Eligibility Checks Messages"
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE BDL."Online Eligibility Checks Product Descriptions"
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE DD.DD_D_HI_ASSESS_GROUP
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE DD.DD_OEC_MESSAGE
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE DD.DD_XREF_HI_ASSESS_GROUP_PRODUCT
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE DD.DD_XREF_HI_ITEM_PRODUCT
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE EDL.D_HI_ASSESS_GROUP
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE EDL.D_HI_ASSESS_GROUP_PRODUCT_XREF
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE EDL.D_HI_ITEM_PRODUCT_XREF
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE EDL.D_HI_PROVIDER_RGSTRTN_STATUS
	ALLOW WRITE ACCESS;

RUNSTATS ON TABLE EDL.D_OEC_MESSAGE
	ALLOW WRITE ACCESS;